# Inspired by http://snippets.dzone.com/posts/show/2925
#

namespace :svn do

  desc 'Configure a subversion wc for rails'
  task :svnize do
    svnize
    resvnize
  end

  desc 'Re-configure a subversion wc for rails'
  task :resvnize do
    resvnize
  end

  desc 'Add new files to subversion'
  task :add do
    `svn status | grep '^?' | sed -e 's/? *//' | sed -e 's/ / /g' | xargs svn add`
  end
end



def svnize  
  puts "svnizing ."
  `rm public/index.html`
  `mv config/database.yml{,.sample}`
  `svn add *`
  svn_revert_each(%w[tmp log doc])
end
def resvnize
  puts "re-svnizing ."
  %w[tmp log doc].each do |d|
    svn_prop_add("svn:ignore", d, '*')
  end
  svn_prop_add("svn:ignore", ".", "*tags\ncoverage")
  svn_prop_add("svn:ignore", "db/", "*.sqlite3\nschema.rb")
  svn_prop_add("svn:ignore", "config/", "database.yml")
  svn_prop_add("svn:externals", "vendor/plugins", "trike_test_tools\thttp://code.trike.com.au/svn/rails/plugins/trike_test_tools")
  symlink_database_yml_to_database_yml_sample
  `svn up`
end

def svn_prop_add(property, path, value)
  values = `svn propget #{property} #{path}`.split("\n") || []
  values += value.split("\n")
  if property == "svn:externals"
    values.collect! do |value|
      local_dir, external = value.split
      external.sub!(/\/$/, "")
      "#{local_dir}\t#{external}"
    end
  end
  `svn propset #{property} '#{ values.uniq.join("\n") }' #{path}`
end
def symlink_database_yml_to_database_yml_sample
  unless File.exist?("config/database.yml")
    `cd config && ln -s database.yml.sample database.yml && cd ..`                                             
  end
end
def svn_revert_each(dirs)
  dirs.each do |d|
    `svn revert #{d}/*`
  end
end
def `(command)
  puts command
  puts super
end
